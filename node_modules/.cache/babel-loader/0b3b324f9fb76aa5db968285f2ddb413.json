{"ast":null,"code":"import * as p5 from 'p5';\nimport \"p5/lib/addons/p5.dom\";\nimport * as cocoSsd from '@tensorflow-models/coco-ssd';\nimport * as faceapi from 'face-api.js';\nimport traductor from \"./traductor\"; //const traductor = require('./traductor');\n//console.log(traductor.traducir(\"perro\"))\n\nconst MODEL_URL = '/models';\nexport default function sketch(p) {\n  let capture = null;\n  let cocossdModel = null;\n  let cocoDrawings = [];\n  let faceDrawings = [];\n\n  function showCocoSSDResults(results) {\n    cocoDrawings = results; //  console.log(results)\n  }\n\n  function showFaceDetectionData(data) {\n    faceDrawings = data;\n  }\n\n  p.setup = async function () {\n    p.frameRate(1);\n    await faceapi.loadSsdMobilenetv1Model(MODEL_URL);\n    await faceapi.loadAgeGenderModel(MODEL_URL);\n    await faceapi.loadFaceExpressionModel(MODEL_URL);\n    p.createCanvas(1280, 720);\n    const constraints = {\n      video: {\n        mandatory: {\n          minWidth: 1280,\n          minHeight: 720\n        },\n        optional: [{\n          maxFrameRate: 40\n        }]\n      },\n      audio: false\n    };\n    capture = p.createCapture(constraints, () => {});\n    capture.id(\"video_element\");\n    capture.size(1280, 720);\n    capture.hide();\n    cocoSsd.load().then(model => {\n      try {\n        cocossdModel = model;\n      } catch (e) {\n        console.log(e);\n      }\n    }).catch(e => {\n      console.log(\"Error occured : \", e);\n    });\n  };\n\n  p.draw = async () => {\n    if (!capture) {\n      return;\n    }\n\n    p.background(200);\n    p.image(capture, 0, 0, 1280 * 0.75, 720);\n    p.fill(0, 0, 0, 0);\n    cocoDrawings.map(drawing => {\n      if (drawing) {\n        console.log(window.idioma);\n        drawing.class = traductor.traducir(window.idioma, drawing.class);\n        p.textSize(20);\n        p.strokeWeight(1);\n        const textX = drawing.bbox[0] * 1.5 + drawing.bbox[2] * 1.5;\n        const textY = drawing.bbox[1] + drawing.bbox[3] * 1.25;\n        const confidenetext = \"Confidence: \" + drawing.score.toFixed(1);\n        const textWidth = p.textWidth(confidenetext);\n        const itemTextWidth = p.textWidth(drawing.class);\n        p.text(drawing.class, textX - itemTextWidth - 10, textY - 50);\n        p.text(confidenetext, textX - textWidth - 10, textY - 10);\n        p.strokeWeight(4);\n        p.stroke('rgb(100%,100%,100%)');\n        p.rect(drawing.bbox[0] * 1.5, drawing.bbox[1] * 1.25, drawing.bbox[2] * 1.5, drawing.bbox[3] * 1.5);\n      }\n    });\n    faceDrawings.map(drawing => {\n      if (drawing) {\n        p.textSize(15);\n        p.strokeWeight(1);\n        const textX = drawing.detection.box._x + drawing.detection.box._width;\n        const textY = drawing.detection.box._y + drawing.detection.box._height;\n        const confidencetext = \"Gender: \" + drawing.gender;\n        const textWidth = p.textWidth(confidencetext);\n        p.text(confidencetext, textX - textWidth - 10, textY - 60);\n        const agetext = \"Age: \" + drawing.age.toFixed(0);\n        const ageTextWidth = p.textWidth(agetext);\n        p.text(agetext, textX - ageTextWidth - 10, textY - 30);\n        const copiedExpression = drawing.expressions;\n        const expressions = Object.keys(copiedExpression).map(key => {\n          const value = copiedExpression[key];\n          return value;\n        });\n        const max = Math.max(...expressions);\n        const expression_value = Object.keys(copiedExpression).filter(key => {\n          return copiedExpression[key] === max;\n        })[0];\n        const expressiontext = \"Mood: \" + expression_value;\n        const expressionWidth = p.textWidth(expressiontext);\n        p.text(expressiontext, textX - expressionWidth - 10, textY - 10);\n        p.strokeWeight(4);\n        p.stroke('rgb(100%,100%,100%)');\n        p.rect(drawing.detection.box._x, drawing.detection.box._y, drawing.detection.box._width, drawing.detection.box._height);\n      }\n    }); //faceapi.detectAllFaces(document.getElementById(\"video_element\")).then((caras)=>{console.log(\"_-----------------caras\",caras)}).catch((e)=>{console.log(\"error\",e)});\n    //console.log(car)\n    // faceapi.detectAllFaces(document.getElementById(capture.id())).withAgeAndGender().withFaceExpressions().then((data) => {\n    //     showFaceDetectionData(data);\n    //     console.log(\"face\",data);\n    // }).catch((e)=>{console.log(\"error\",e)});\n\n    if (capture.loadedmetadata) {\n      //console.log(\"----------------**********\")\n      if (cocossdModel) {\n        cocossdModel.detect(document.getElementById(\"video_element\")).then(showCocoSSDResults).catch(e => {\n          console.log(\"Exception : \", e);\n        });\n      }\n    }\n  };\n}\n;","map":{"version":3,"sources":["/Users/angelaranibar/Erick/IAHito5/src/ObjectDetectionSketch.js"],"names":["p5","cocoSsd","faceapi","traductor","MODEL_URL","sketch","p","capture","cocossdModel","cocoDrawings","faceDrawings","showCocoSSDResults","results","showFaceDetectionData","data","setup","frameRate","loadSsdMobilenetv1Model","loadAgeGenderModel","loadFaceExpressionModel","createCanvas","constraints","video","mandatory","minWidth","minHeight","optional","maxFrameRate","audio","createCapture","id","size","hide","load","then","model","e","console","log","catch","draw","background","image","fill","map","drawing","window","idioma","class","traducir","textSize","strokeWeight","textX","bbox","textY","confidenetext","score","toFixed","textWidth","itemTextWidth","text","stroke","rect","detection","box","_x","_width","_y","_height","confidencetext","gender","agetext","age","ageTextWidth","copiedExpression","expressions","Object","keys","key","value","max","Math","expression_value","filter","expressiontext","expressionWidth","loadedmetadata","detect","document","getElementById"],"mappings":"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","sourcesContent":["import * as p5 from 'p5'\nimport \"p5/lib/addons/p5.dom\";\nimport * as cocoSsd from '@tensorflow-models/coco-ssd';\nimport * as faceapi from 'face-api.js';\n\nimport traductor from \"./traductor\"\n//const traductor = require('./traductor');\n//console.log(traductor.traducir(\"perro\"))\n\nconst MODEL_URL = '/models'\n\nexport default function sketch (p) {\n\n    let capture = null;\n    let cocossdModel = null;\n\n    let cocoDrawings = [];\n    let faceDrawings = [];\n\n\n    function showCocoSSDResults(results) {\n        cocoDrawings = results;\n      //  console.log(results)\n    }\n\n    function showFaceDetectionData(data) {\n        faceDrawings = data;\n    }\n\n    p.setup = async function () {\n        p.frameRate(1);\n\n        await faceapi.loadSsdMobilenetv1Model(MODEL_URL);\n        await faceapi.loadAgeGenderModel(MODEL_URL);\n        await faceapi.loadFaceExpressionModel(MODEL_URL);\n\n        p.createCanvas(1280, 720);\n        const constraints = {\n            video: {\n              mandatory: {\n                minWidth: 1280,\n                minHeight: 720\n              },\n              optional: [{ maxFrameRate: 40 }]\n            },\n            audio: false\n          };\n\n        capture = p.createCapture(constraints, () => {\n        });\n\n\n        capture.id(\"video_element\");\n        capture.size(1280, 720);\n        capture.hide();\n\n        cocoSsd.load().then((model) => {\n            try {\n                cocossdModel = model;\n            } catch(e) {\n                console.log(e);\n            }\n\n        }).catch((e) => {\n            console.log(\"Error occured : \", e);\n        });\n\n    };\n\n    p.draw = async () => {\n        if (!capture) {\n            return;\n        }\n        p.background(200);\n        p.image(capture, 0, 0, 1280* 0.75,720);\n        p.fill(0,0,0,0);\n\n        cocoDrawings.map((drawing) => {\n            if (drawing) {\n                console.log(window.idioma)\n                drawing.class = traductor.traducir(window.idioma,drawing.class)\n                p.textSize(20);\n                p.strokeWeight(1);\n                const textX = drawing.bbox[0]*1.5+drawing.bbox[2]*1.5;\n                const textY = drawing.bbox[1]+drawing.bbox[3]*1.25;\n\n                const confidenetext = \"Confidence: \"+ drawing.score.toFixed(1);\n                const textWidth = p.textWidth(confidenetext);\n\n                const itemTextWidth = p.textWidth(drawing.class);\n                p.text(drawing.class, textX-itemTextWidth-10, textY-50);\n\n                p.text(confidenetext, textX-textWidth-10, textY-10);\n                p.strokeWeight(4);\n                p.stroke('rgb(100%,100%,100%)');\n                p.rect(drawing.bbox[0]*1.5, drawing.bbox[1]*1.25, drawing.bbox[2]*1.5, drawing.bbox[3]*1.5);\n            }\n        });\n\n        faceDrawings.map((drawing) => {\n            if (drawing) {\n                p.textSize(15);\n                p.strokeWeight(1);\n\n                const textX = drawing.detection.box._x+drawing.detection.box._width;\n                const textY = drawing.detection.box._y+drawing.detection.box._height;\n\n                const confidencetext = \"Gender: \"+ drawing.gender;\n                const textWidth = p.textWidth(confidencetext);\n                p.text(confidencetext, textX-textWidth-10, textY-60);\n\n\n                const agetext = \"Age: \"+ drawing.age.toFixed(0);\n                const ageTextWidth = p.textWidth(agetext);\n                p.text(agetext, textX-ageTextWidth-10, textY-30);\n\n                const copiedExpression = drawing.expressions;\n                const expressions = Object.keys(copiedExpression).map((key) => {\n                    const value = copiedExpression[key];\n                    return value;\n                })\n\n                const max = Math.max(...expressions);\n\n                const expression_value = Object.keys(copiedExpression).filter((key) => {\n                    return copiedExpression[key] === max;\n                })[0];\n\n                const expressiontext = \"Mood: \"+ expression_value;\n                const expressionWidth = p.textWidth(expressiontext);\n                p.text(expressiontext, textX-expressionWidth-10, textY-10);\n\n                p.strokeWeight(4);\n                p.stroke('rgb(100%,100%,100%)');\n                p.rect(drawing.detection.box._x, drawing.detection.box._y, drawing.detection.box._width, drawing.detection.box._height);\n            }\n        });\n        //faceapi.detectAllFaces(document.getElementById(\"video_element\")).then((caras)=>{console.log(\"_-----------------caras\",caras)}).catch((e)=>{console.log(\"error\",e)});\n        //console.log(car)\n        // faceapi.detectAllFaces(document.getElementById(capture.id())).withAgeAndGender().withFaceExpressions().then((data) => {\n        //     showFaceDetectionData(data);\n        //     console.log(\"face\",data);\n        // }).catch((e)=>{console.log(\"error\",e)});\n\n        if(capture.loadedmetadata) {\n          //console.log(\"----------------**********\")\n            if (cocossdModel) {\n                cocossdModel\n                .detect(document.getElementById(\"video_element\"))\n                .then(showCocoSSDResults)\n                .catch((e) => {\n                    console.log(\"Exception : \", e);\n                });\n            }\n        }\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}